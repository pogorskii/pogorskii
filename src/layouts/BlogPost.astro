---
import type {CollectionEntry} from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const {title, description, pubDate, updatedDate, heroImage, tags} = Astro.props;
---

<html lang="en">
<head>
    <BaseHead title={title} description={description}/>
    <style>
        main {
            background: var(--black);
            max-width: 100%;
            margin: 0;
            @apply w-full;
        }

        .hero-image {
            width: 100%;
        }

        .hero-image img {
            display: block;
            margin: 0 auto;
            border-radius: 12px;
            box-shadow: var(--box-shadow);
        }

        .blogpost-container {
            width: 720px;
            max-width: calc(100% - 2em);
            margin: auto;
            padding: 1em;
        }

        .title {
            margin-bottom: 1em;
            padding: 1em 0;
            text-align: center;
            line-height: 1;
        }

        .title h1 {
            margin: 0 0 0.5em 0;
        }

        .date {
            margin-bottom: 0.5em;
            color: rgb(var(--gray));
        }

        .last-updated-on {
            font-style: italic;
        }

        p {
            @apply prose;
        }
    </style>
</head>

<body>
<Header/>
<main class="text-pogorskii-white">
    <article>
        <div class="hero-image">
            {heroImage && <img width={1020} height={510} src={heroImage} alt=""/>}
        </div>
        <div class="blogpost-container flex flex-col">
            <div class="title">
                <div class="date">
                    <FormattedDate date={pubDate}/>
                    {
                        updatedDate && (
                                    <div class="last-updated-on">
                                        Last updated on
                                        <FormattedDate date={updatedDate}/>
                                    </div>
                        )
                    }
                </div>
                <h1 class="text-4xl font-bold">{title}</h1>
                <hr/>
            </div>
            <div class="mb-6 mx-auto max-w-xl prose dark:prose-invert
  prose-h1:font-bold prose-h1:text-xl
  prose-a:text-blue-600 prose-p:text-justify prose-img:rounded-xl
  prose-headings:border-b-2  prose-headings:border-pogorskii-yellow">
                <slot/>
            </div>
            <div class="mx-auto flex flex-wrap gap-2 mt-2">
                {tags?.map(t => (
                        <span class="bg-pogorskii-violet text-pogorskii-white text-xs font-semibold mr-2 px-2.5 py-0.5 rounded">{t}</span>
                ))}
            </div>
        </div>
    </article>
</main>
<Footer/>
</body>
</html>
<style>
    p {
        @apply !prose;
    }

    h2 {
        @apply text-2xl font-bold;
    }
</style>
